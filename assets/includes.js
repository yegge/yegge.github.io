// assets/includes.js// Inject header.html and footer.html, and wire up dropdown menus, with subpath support.const BASE = (() => {  // If site is served under a subpath, e.g. /likeaghost/, derive it:  // Grab the first segment after the initial slash if hosted on GitHub Pages project site.  // Example pathname: /likeaghost/index.html -> base=/likeaghost  const path = location.pathname;  const m = path.match(/^\/([^\/]+)\//);  return m ? `/${m[1]}` : '';})();async function inject(selector, url) {  const host = document.querySelector(selector);  if (!host) return;  try {    const res = await fetch(`${BASE}${url}`, { cache: 'no-store' });    if (!res.ok) throw new Error(res.status + ' ' + res.statusText);    host.innerHTML = await res.text();    if (selector === '#site-header') bindDropdowns();  } catch (err) {    console.error('Include failed:', url, err);  }}function bindDropdowns() {  const buttons = document.querySelectorAll('[data-dropdown]');  const panels  = document.querySelectorAll('[data-panel]');  function closeAll() {    panels.forEach(p => p.style.display = 'none');    buttons.forEach(b => b.setAttribute('aria-expanded', 'false'));  }  buttons.forEach(btn => {    btn.addEventListener('click', e => {      const key = btn.getAttribute('data-dropdown');      const panel = document.querySelector(`[data-panel="${key}"]`);      const open = panel && panel.style.display !== 'none';      closeAll();      if (panel && !open) {        panel.style.display = 'block';        btn.setAttribute('aria-expanded', 'true');      }      e.stopPropagation();    });  });  document.addEventListener('click', closeAll);  document.addEventListener('keydown', (e) => {    if (e.key === 'Escape') closeAll();  });}(function init(){  inject('#site-header', '/header.html');  inject('#site-footer', '/footer.html');})();